'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _cryptoJs = require('crypto-js');

var _cryptoJs2 = _interopRequireDefault(_cryptoJs);

var _getWxTicket = require('./getWxTicket');

var _getWxTicket2 = _interopRequireDefault(_getWxTicket);

var _wxConfig = require('./wxConfig');

var _wxConfig2 = _interopRequireDefault(_wxConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var logger = _wxConfig2.default.logger;

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(req, res, next) {
    var wxConfig, fullPath, currentUrl, wechatTicket, timestamp, nonceStr, string1, signature, wxSdkConfig;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // eslint-disable-line
            wxConfig = _wxConfig2.default.wxConfig;
            _context.prev = 1;
            fullPath = req.query.fullPath;
            currentUrl = '' + wxConfig.domain + fullPath;
            _context.next = 6;
            return (0, _getWxTicket2.default)();

          case 6:
            wechatTicket = _context.sent;
            timestamp = Math.floor(Date.now() / 1000);
            nonceStr = Math.random().toString(32).substr(2, 15);
            string1 = 'jsapi_ticket=' + wechatTicket + '&noncestr=' + nonceStr + '&timestamp=' + timestamp + '&url=' + currentUrl;
            signature = _cryptoJs2.default.SHA1(string1).toString(); // eslint-disable-line

            wxSdkConfig = { signature: signature, nonceStr: nonceStr, timestamp: timestamp };

            wxSdkConfig.appId = wxConfig.appId;
            return _context.abrupt('return', res.json({ wxSdkConfig: wxSdkConfig, apiList: _wxConfig2.default.apiList }));

          case 16:
            _context.prev = 16;
            _context.t0 = _context['catch'](1);

            logger.error('error when getWxSdkConfig:', _context.t0.stack);

          case 19:
            next();

          case 20:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[1, 16]]);
  }));

  return function (_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

module.exports = exports['default'];
//# sourceMappingURL=getWxSdkConfig.js.map