'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

// 构造上传函数
// 这里的key应该是userId/bizId/文件名
var uploadFile = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(uptoken, key, stream) {
    var uploadConfig, formUploader, putExtra, _ref2, qiniuKey;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            uploadConfig = new _qiniu2.default.conf.Config();

            uploadConfig.zone = _qiniu2.default.zone[_config2.default.qiniu.feedback.zone];
            formUploader = new _qiniu2.default.form_up.FormUploader(uploadConfig);
            putExtra = new _qiniu2.default.form_up.PutExtra();
            _context.next = 6;
            return _bluebird2.default.promisify(formUploader.putStream).bind(formUploader)(uptoken, key, stream, putExtra);

          case 6:
            _ref2 = _context.sent;
            qiniuKey = _ref2.key;
            return _context.abrupt('return', _config2.default.qiniu.feedback.domain + '/' + qiniuKey);

          case 9:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function uploadFile(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * req.query -> { mediaId, bizUid }
 * @param req
 * @param res
 * @returns {Promise.<void>}
 */
// 将微信服务器上的图片下载下来, 然后上传到qiniu
// 从微信服务器下载图片, 需要accesstoken


var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _qiniu = require('qiniu');

var _qiniu2 = _interopRequireDefault(_qiniu);

var _v = require('uuid/v4');

var _v2 = _interopRequireDefault(_v);

var _getWechatToken = require('./getWechatToken');

var _getWechatToken2 = _interopRequireDefault(_getWechatToken);

var _sessionHeader = require('./sessionHeader');

var _sessionHeader2 = _interopRequireDefault(_sessionHeader);

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(req, res) {
    var sessionKey, _ref4, uploadToken, _ref5, wechatAccessToken, url, resp, imgStream, imgPath;

    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return (0, _sessionHeader2.default)();

          case 3:
            sessionKey = _context2.sent['X-User-Token'];
            _context2.next = 6;
            return (0, _axios2.default)({
              method: 'get',
              url: _config2.default.qiniuDomain + '/uploadToken',
              params: {
                sessionKey: sessionKey,
                space: _config2.default.qiniu.feedback.bucket
              }
            });

          case 6:
            _ref4 = _context2.sent;
            uploadToken = _ref4.data.obj.token;
            _context2.next = 10;
            return (0, _getWechatToken2.default)();

          case 10:
            _ref5 = _context2.sent;
            wechatAccessToken = _ref5.wechatAccessToken;
            url = 'http://file.api.weixin.qq.com/cgi-bin/media/get';
            // 从微信服务器获取图片

            _context2.next = 15;
            return (0, _axios2.default)({
              method: 'get',
              url: url,
              params: {
                access_token: wechatAccessToken,
                media_id: req.query.mediaId
              },
              responseType: 'stream'
            });

          case 15:
            resp = _context2.sent;
            imgStream = resp.data;
            // 为了保证图片名称唯一, 用一个uuid作为key

            _context2.next = 19;
            return uploadFile(uploadToken, req.query.bizUid + '/' + (0, _v2.default)(), imgStream);

          case 19:
            imgPath = _context2.sent;

            res.json({
              imgPath: imgPath
            });
            _context2.next = 26;
            break;

          case 23:
            _context2.prev = 23;
            _context2.t0 = _context2['catch'](0);

            res.status(500).json({
              errorMsg: _context2.t0.message
            });

          case 26:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined, [[0, 23]]);
  }));

  return function (_x4, _x5) {
    return _ref3.apply(this, arguments);
  };
}();

module.exports = exports['default'];
//# sourceMappingURL=uploadImageToQiniu.js.map