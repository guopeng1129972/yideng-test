{"version":3,"sources":["../src/pubMq.js"],"names":["vhost","exchange","exchangeType","routingKey","data","amqpDomains","config","i","Math","floor","random","length","url","amqp","connect","connection","createChannel","channel","assertExchange","durable","publish","Buffer","from","close","console","error"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;sFAEe;AAAA,QAASA,KAAT,SAASA,KAAT;AAAA,QAAgBC,QAAhB,SAAgBA,QAAhB;AAAA,QAA0BC,YAA1B,SAA0BA,YAA1B;AAAA,QAAwCC,UAAxC,SAAwCA,UAAxC;AAAA,QAAoDC,IAApD,SAAoDA,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,uBADK,GACWC,gBADX,CACLD,WADK;AAEPE,aAFO,GAEHC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBL,YAAYM,MAAvC,CAFG;AAGPC,eAHO,GAGEP,YAAYE,CAAZ,CAHF,SAGoBP,KAHpB;AAAA;AAAA,mBAKYa,kBAAKC,OAAL,CAAaF,GAAb,CALZ;;AAAA;AAKPG,sBALO;AAAA;AAAA;AAAA,mBAOWA,WAAWC,aAAX,EAPX;;AAAA;AAOLC,mBAPK;AAAA;AAAA,mBAQLA,QAAQC,cAAR,CAAuBjB,QAAvB,EAAiCC,YAAjC,EAA+C,EAAEiB,SAAS,IAAX,EAA/C,CARK;;AAAA;AAAA;AAAA,mBASLF,QAAQG,OAAR,CAAgBnB,QAAhB,EAA0BE,UAA1B,EAAsCkB,OAAOC,IAAP,CAAY,yBAAelB,IAAf,CAAZ,CAAtC,CATK;;AAAA;AAAA;AAAA,mBAULa,QAAQM,KAAR,EAVK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAYXC,oBAAQC,KAAR,uDAA8CtB,UAA9C;;AAZW;AAAA;;AAcXY,uBAAWQ,KAAX;AAdW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"pubMq.js","sourcesContent":["import amqp from 'amqplib'\nimport config from './config'\n\nexport default async ({ vhost, exchange, exchangeType, routingKey, data }) => {\n  const { amqpDomains } = config\n  const i = Math.floor(Math.random() * amqpDomains.length)\n  const url = `${amqpDomains[i]}/${vhost}`\n\n  const connection = await amqp.connect(url)\n  try {\n    const channel = await connection.createChannel()\n    await channel.assertExchange(exchange, exchangeType, { durable: true })\n    await channel.publish(exchange, routingKey, Buffer.from(JSON.stringify(data)))\n    await channel.close()\n  } catch (e) {\n    console.error(`publish 消息错误, routing key is ${routingKey}`, e)\n  } finally {\n    connection.close()\n  }\n}\n"]}