'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _amqplib = require('amqplib');

var _amqplib2 = _interopRequireDefault(_amqplib);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2) {
    var vhost = _ref2.vhost,
        exchange = _ref2.exchange,
        exchangeType = _ref2.exchangeType,
        routingKey = _ref2.routingKey,
        data = _ref2.data;
    var amqpDomains, i, url, connection, channel;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            amqpDomains = _config2.default.amqpDomains;
            i = Math.floor(Math.random() * amqpDomains.length);
            url = amqpDomains[i] + '/' + vhost;
            _context.next = 5;
            return _amqplib2.default.connect(url);

          case 5:
            connection = _context.sent;
            _context.prev = 6;
            _context.next = 9;
            return connection.createChannel();

          case 9:
            channel = _context.sent;
            _context.next = 12;
            return channel.assertExchange(exchange, exchangeType, { durable: true });

          case 12:
            _context.next = 14;
            return channel.publish(exchange, routingKey, Buffer.from((0, _stringify2.default)(data)));

          case 14:
            _context.next = 16;
            return channel.close();

          case 16:
            _context.next = 21;
            break;

          case 18:
            _context.prev = 18;
            _context.t0 = _context['catch'](6);

            console.error('publish \u6D88\u606F\u9519\u8BEF, routing key is ' + routingKey, _context.t0);

          case 21:
            _context.prev = 21;

            connection.close();
            return _context.finish(21);

          case 24:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[6, 18, 21, 24]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

module.exports = exports['default'];
//# sourceMappingURL=pubMq.js.map