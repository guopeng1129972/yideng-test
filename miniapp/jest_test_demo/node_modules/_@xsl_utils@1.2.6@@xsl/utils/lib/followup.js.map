{"version":3,"sources":["../src/followup.js"],"names":["sendLinkMessageToPatient","patientId","doctorId","title","placeholder","url","Error","requestUrl","followup","request","post","messageUid","content","formType","resp","R","path","sendLinkMessageToDoctor","msgType","getPatienInfoByPatientId","get","getPatienInfoByPatientIds","patientIds","getV4PatientInfoByPatientId","casefolder","getPatientListByDoctorId","getAllPatientByDoctorId","createPatientEducationWithDoctorId","resourceName","link","diseaseName","sendMessage","openId","message","openid","Math","floor","random"],"mappings":"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","file":"followup.js","sourcesContent":["import R from 'ramda'\nimport uuid from 'uuid/v4'\nimport request from './request'\nimport { followup } from './config'\n\n// placeholder 暂时不用, 应该是一个icon地址\nexport const sendLinkMessageToPatient = async ({ patientId, doctorId, title, placeholder = 'xxx', url }) => {\n  if (!patientId || !doctorId) throw new Error('缺少医生id或者患者id')\n  const requestUrl = `${followup.url}/content/inner/message`\n  const resp = await request.post(requestUrl, {\n    patientId,\n    messageUid: uuid(),\n    doctorId,\n    content: {\n      title,\n      placeholder,\n      url,\n      formType: 'scale',\n    },\n  })\n  return R.path(['id'])(resp)\n}\n\nexport const sendLinkMessageToDoctor = async ({ patientId, title, placeholder = 'xxx', url }) => {\n  if (!patientId) throw new Error('缺少患者id')\n  if (!url) throw new Error('缺少链接url')\n  const requestUrl = `${followup.url}/inner/message/doctor`\n  const resp = await request.post(requestUrl, {\n    patientId,\n    messageUid: uuid(),\n    content: {\n      title,\n      placeholder,\n      url,\n      formType: 'scale',\n    },\n    msgType: 'native-form',\n  })\n  return R.path(['id'])(resp)\n}\n\n// 新版患者信息 根据患者id获取患者信息\nexport const getPatienInfoByPatientId = async ({ patientId }) => {\n  if (!patientId) throw new Error('缺少患者id')\n  const requestUrl = `${followup.url}/inner/patient/${patientId}`\n  const resp = await request.get(requestUrl)\n  return resp\n}\n\n// 根据一组患者id获取患者信息。注意非一一对应，需手工对应！！！！\nexport const getPatienInfoByPatientIds = async ({ patientIds }) => {\n  const resp = await request.get(`${followup.url}/inner/patient/ids/${patientIds}`)\n  return resp\n}\n\n// 经典版患者信息\nexport const getV4PatientInfoByPatientId = async ({ patientId }) => {\n  if (!patientId) throw new Error('缺少患者id')\n  const requestUrl = `${followup.casefolder}/patient/detail/${patientId}`\n  const resp = await request.get(requestUrl)\n  return resp\n}\n\n// 获取医生下的有效患者列表\nexport const getPatientListByDoctorId = (doctorId) => {\n  if (!doctorId) throw new Error('缺少doctorId')\n  const requestUrl = `${followup.casefolder}/patient/list/${doctorId}`\n  return request.get(requestUrl)\n}\n\n// 获取医生下的所有患者列表\nexport const getAllPatientByDoctorId = (doctorId) => {\n  if (!doctorId) throw new Error('缺少doctorId')\n  const requestUrl = `${followup.casefolder}/patient/list/${doctorId}?type=all`\n  return request.get(requestUrl)\n}\n\n// 为医生创建患教\nexport const createPatientEducationWithDoctorId = ({ doctorId, resourceName, link, diseaseName }) => {\n  if (!doctorId || !resourceName || !link || !diseaseName) throw new Error('参数错误')\n  const requestUrl = `${followup.casefolder}/doctor/init/resource/${doctorId}`\n  return request.post(requestUrl, {\n    resourceName, link, diseaseName,\n  })\n}\n\n// 发送随访消息\nexport const sendMessage = ({ content, openId }) => {\n  if (!content || !openId) throw new Error('参数错误')\n  return request.post(followup.message, {\n    content,\n    openid: openId,\n    messageUid: Math.floor(Math.random() * 1000000000000000000), // 生成18位随机数字\n  })\n}\n"]}