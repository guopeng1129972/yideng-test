'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _ramda = require('ramda');

var _ramda2 = _interopRequireDefault(_ramda);

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _cookie = require('cookie');

var _cookie2 = _interopRequireDefault(_cookie);

var _config = require('./config');

var _ldapUserInfo = require('./ldap-user-info');

var _ldapUserInfo2 = _interopRequireDefault(_ldapUserInfo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var token = _config.reward.token,
    secret = _config.reward.secret;


var DR = 'dr';
var BUSINESS = 'business';
var BM = 'bm';

function getExtension(req, source) {
  var addressIP = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
  var extension = void 0;
  if (source === BUSINESS) {
    var _req$session$currentU = req.session.currentUser,
        operatorName = _req$session$currentU.username,
        operatorId = _req$session$currentU.id;

    extension = operatorId + ':' + operatorName + ':' + addressIP + ':' + source;
    return extension;
  } else if (source === BM) {
    var cookies = _cookie2.default.parse(_ramda2.default.path(['headers', 'cookie'], req));
    var lUsertoken = cookies['L-User-Token'];

    var _getLdapUserInfo = (0, _ldapUserInfo2.default)(lUsertoken),
        _operatorId = _getLdapUserInfo.operatorId,
        operatorNameEncode = _getLdapUserInfo.operatorNameEncode;

    extension = _operatorId + ':' + operatorNameEncode + ':' + addressIP + ':' + source;
    return extension;
  } else if (source === DR) {
    var _req$session$admin = req.session.admin,
        _operatorName = _req$session$admin.username,
        _operatorId2 = _req$session$admin.id;

    extension = _operatorId2 + ':' + _operatorName + ':' + addressIP + ':' + source;
    return extension;
  }
  return extension;
}

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(ctx, source) {
    var logger = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : console;
    var req, timestamp, md5, signature, extension, addParams;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;

            // 获取request
            req = ctx.req;

            if (!req) req = ctx;
            // 时间戳
            timestamp = Date.now();
            md5 = _crypto2.default.createHash('md5');
            signature = md5.update('' + token + timestamp + secret).digest('hex');
            extension = void 0;

            if (_ramda2.default.find(function (v) {
              return v === req.method.toUpperCase();
            })(['POST', 'DELETE', 'PUT', 'DEL', 'PATCH'])) {
              extension = getExtension(req, source);
            }
            addParams = {
              token: token,
              timestamp: timestamp,
              signature: signature,
              extension: extension || ''
            };

            req.headers = (0, _extends3.default)({}, req.headers, addParams);
            return _context.abrupt('return', addParams);

          case 13:
            _context.prev = 13;
            _context.t0 = _context['catch'](0);

            logger.error(_context.t0);
            return _context.abrupt('return', _context.t0);

          case 17:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[0, 13]]);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

module.exports = exports['default'];
//# sourceMappingURL=signature.js.map