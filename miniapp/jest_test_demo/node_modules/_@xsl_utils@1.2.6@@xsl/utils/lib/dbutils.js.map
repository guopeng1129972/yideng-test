{"version":3,"sources":["../src/dbutils.js"],"names":["R","require","lang","stringify","o","isObject","isArray","e","trans","transKey","transValue","obj","reduce","acc","key","keys","toLower","compose","replace","_","s","transformObjToDb","toUpper","transformDbToObj","zipAll","fun","arrs","len","Math","min","map","arr","length","repeat","index","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,IAAIC,QAAQ,OAAR,CAAV;AACA,IAAMC,OAAOD,QAAQ,QAAR,CAAb;;AAEA,SAASE,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,MAAIF,KAAKG,QAAL,CAAcD,CAAd,KAAoBF,KAAKI,OAAL,CAAaF,CAAb,CAAxB,EAAyC;AACvC,QAAI;AACF,aAAO,yBAAeA,CAAf,CAAP;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACV;AACD;AACF;AACD,SAAOH,CAAP;AACD;;AAED,IAAMI,QAAQ,SAARA,KAAQ,CAACC,QAAD,EAAWC,UAAX,EAAuBC,GAAvB;AAAA,SAA+BX,EAAEY,MAAF,CAAS,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClED,QAAIJ,SAASK,GAAT,CAAJ,IAAqBJ,WAAWC,IAAIG,GAAJ,CAAX,CAArB;AACA,WAAOD,GAAP;AACD,GAH4C,EAG1C,EAH0C,EAGtCb,EAAEe,IAAF,CAAOJ,GAAP,CAHsC,CAA/B;AAAA,CAAd;;AAKA,IAAMK,UAAUhB,EAAEiB,OAAF,CACdjB,EAAEkB,OAAF,CAAU,UAAV,EAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAcpB,EAAEgB,OAAF,CAAUI,CAAV,CAAd;AAAA,CAAtB,CADc,EAEdpB,EAAEkB,OAAF,CAAU,UAAV,EAAsB,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUpB,EAAEgB,OAAF,CAAUI,CAAV,CAAV;AAAA,CAAtB,CAFc,CAEgC;AAFhC,CAAhB;AAIA,SAASC,gBAAT,CAA0BV,GAA1B,EAA+B;AAC7B,SAAOH,MAAMQ,OAAN,EAAeb,SAAf,EAA0BQ,GAA1B,CAAP;AACD;;AAED,IAAMW,UAAUtB,EAAEkB,OAAF,CAAU,QAAV,EAAoB,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUpB,EAAEsB,OAAF,CAAUF,CAAV,CAAV;AAAA,CAApB,CAAhB;AACA,SAASG,gBAAT,CAA0BZ,GAA1B,EAA+B;AAC7B,SAAOH,MAAMc,OAAN,EAAe;AAAA,WAAKf,CAAL;AAAA,GAAf,EAAuBI,GAAvB,CAAP;AACD;;AAED,SAASa,MAAT,CAAgBC,GAAhB,EAA8B;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AAC5B,MAAMC,MAAMC,KAAKC,GAAL,8CAAaH,KAAKI,GAAL,CAAS;AAAA,QAACC,GAAD,uEAAO,EAAP;AAAA,WAAcA,IAAIC,MAAJ,IAAc,CAA5B;AAAA,GAAT,CAAb,EAAZ;AACA,SAAQhC,EAAEiC,MAAF,CAAS,CAAT,EAAYN,GAAZ,CAAD,CAAmBG,GAAnB,CAAuB,UAACX,CAAD,EAAIe,KAAJ;AAAA,WAAcT,sDAAQC,KAAKI,GAAL,CAAS;AAAA,UAACC,GAAD,uEAAO,EAAP;AAAA,aAAcA,IAAIG,KAAJ,CAAd;AAAA,KAAT,CAAR,EAAd;AAAA,GAAvB,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiB;AACff,oCADe;AAEfE,oCAFe;AAGfC,gBAHe;AAIfF,kBAJe;AAKfN;AALe,CAAjB","file":"dbutils.js","sourcesContent":["const R = require('ramda')\nconst lang = require('./lang')\n\nfunction stringify(o) {\n  if (lang.isObject(o) || lang.isArray(o)) {\n    try {\n      return JSON.stringify(o)\n    } catch (e) {\n      // not handle\n    }\n  }\n  return o\n}\n\nconst trans = (transKey, transValue, obj) => R.reduce((acc, key) => {\n  acc[transKey(key)] = transValue(obj[key])\n  return acc\n}, {}, R.keys(obj))\n\nconst toLower = R.compose(\n  R.replace(/([A-Z])/g, (_, s) => `_${R.toLower(s)}`),\n  R.replace(/^([A-Z])/, (_, s) => R.toLower(s)) // 第一个字母直接 toLower\n)\nfunction transformObjToDb(obj) {\n  return trans(toLower, stringify, obj)\n}\n\nconst toUpper = R.replace(/_(\\w)/g, (_, s) => R.toUpper(s))\nfunction transformDbToObj(obj) {\n  return trans(toUpper, e => e, obj)\n}\n\nfunction zipAll(fun, ...arrs) {\n  const len = Math.min(...(arrs.map((arr = []) => arr.length || 0)))\n  return (R.repeat(1, len)).map((_, index) => fun(...(arrs.map((arr = []) => arr[index]))))\n}\n\nmodule.exports = {\n  transformObjToDb,\n  transformDbToObj,\n  zipAll,\n  toUpper,\n  toLower,\n}\n"]}