'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getContentInfoByPatientIds = exports.addLinkContent = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _v = require('uuid/v4');

var _v2 = _interopRequireDefault(_v);

var _request = require('./request');

var _request2 = _interopRequireDefault(_request);

var _config = require('./config');

var _lang = require('./lang');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// placeholder暂时不传
// 可以通过指定uid来保证不会追加
var addLinkContent = exports.addLinkContent = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(_ref2) {
    var patientId = _ref2.patientId,
        doctorId = _ref2.doctorId,
        title = _ref2.title,
        _ref2$placeholder = _ref2.placeholder,
        placeholder = _ref2$placeholder === undefined ? 'xxx' : _ref2$placeholder,
        url = _ref2.url,
        uid = _ref2.uid;
    var finalUid, requestUrl, resp;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(!patientId || !doctorId)) {
              _context.next = 2;
              break;
            }

            throw new Error('缺少医生id或者患者id');

          case 2:
            if (url) {
              _context.next = 4;
              break;
            }

            throw new Error('缺少链接url');

          case 4:
            finalUid = uid || (0, _v2.default)();
            requestUrl = _config.medclips.contentUrl + '/_insecure/v1/' + doctorId + '/patient/' + patientId + '/' + finalUid;
            _context.next = 8;
            return _request2.default.post(requestUrl, {
              uid: finalUid,
              templateId: 'CUSTOM_MEDICAL_RECORD',
              templateType: 'CUSTOM_MEDICAL_RECORD',
              contentValue: {
                title: title,
                placeholderImage: placeholder,
                flowIndexUrl: url,
                flowId: '0'
              },
              createdDatetime: (0, _moment2.default)().format('YYYY-MM-DD HH:mm:ss')
            }, {
              token: 'random-aea30430-d39b-4a80-84d3-bf2f4f489c76'
            });

          case 8:
            resp = _context.sent;
            return _context.abrupt('return', resp);

          case 10:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function addLinkContent(_x) {
    return _ref.apply(this, arguments);
  };
}();

// 根据患者id获取患者填写的表单信息接口

var getContentInfoByPatientIds = exports.getContentInfoByPatientIds = function getContentInfoByPatientIds(_ref3) {
  var patientIds = _ref3.patientIds;

  if (!patientIds || !(0, _lang.isArray)(patientIds)) throw new Error('患者id提供有误');
  var requestUrl = _config.medclips.contentUrl + '/patient/item/form/' + patientIds.join(',');
  return _request2.default.get(requestUrl, {}, {
    token: 'random-aea30430-d39b-4a80-84d3-bf2f4f489c76'
  });
};
//# sourceMappingURL=medclips.js.map