import crypto from 'crypto'
import { qiniu } from './config'

const expires = 3600

function base64ToUrlSafe(v) {
  return v.replace(/\//g, '_').replace(/\+/g, '-')
}

function hmacSha1(encodedFlags, secretKey) {
  const hmac = crypto.createHmac('sha1', secretKey)
  hmac.update(encodedFlags)
  return hmac.digest('base64')
}

export function makeRequest(url) {
  let baseUrl = url
  const deadline = expires + Math.floor(Date.now() / 1000)

  if (baseUrl.indexOf('?') >= 0) {
    baseUrl += '&e='
  } else {
    baseUrl += '?e='
  }
  baseUrl += deadline

  const signature = hmacSha1(baseUrl, qiniu.SECRET_KEY)
  const encodedSign = base64ToUrlSafe(signature)
  const downloadToken = `${qiniu.ACCESS_KEY}:${encodedSign}`

  return `${baseUrl}&token=${downloadToken}`
}

export const temp = null
