import R from 'ramda'
import cookie from 'cookie'
import knex from 'knex'
import config from './config'
import getLdapUserInfo from './ldap-user-info'

const bmDb = knex(config.bmDb)

export const forKoa = async (ctx, logger = console) => {
  // 自己包住错误, 不要抛出去, 不要影响请求本身
  try {
    const { request, req } = ctx
    const { method, href: url } = request
    if (R.find(v => v === method.toUpperCase())(['POST', 'DELETE', 'PUT', 'DEL', 'PATCH'])) {
      const cookies = cookie.parse(R.path(['headers', 'cookie'], request))
      const token = cookies['L-User-Token']
      const { operatorId, operatorName } = getLdapUserInfo(token)
      // 对于body, 需要解析 注意这里只解析 application/json的
      if ((request.type || '').toLowerCase() === 'application/json') {
        let body = ''
        req.on('data', (chunk) => {
          body += chunk // 一定要使用+=，如果body=chunk，因为请求favicon.ico，body会等于{}
        })
        req.on('end', async () => {
          await bmDb('t_request_log').insert({
            user_id: operatorId,
            user_name: operatorName,
            url,
            method,
            body: JSON.stringify(JSON.parse(body || '{}')),
          })
        })
      } else {
        await bmDb('t_request_log').insert({
          user_id: operatorId,
          user_name: operatorName,
          url,
          method,
          body: JSON.stringify({}),
        })
      }
    }
  } catch (err) {
    logger.error(`error when save operation log, ${err.message}`)
  }
}

export const forExpress = null
