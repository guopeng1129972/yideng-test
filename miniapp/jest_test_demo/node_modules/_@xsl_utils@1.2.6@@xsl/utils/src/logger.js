import winston from 'winston'
import RotateFile from 'winston-daily-rotate-file'
import { logger as loggerConfig } from './config'

const { createLogger, format, transports, addColors } = winston
const { combine, timestamp, printf } = format
const myFormat = printf(info => `${new Date(info.timestamp).toLocaleString()} - ${info.level}: ${info.message}`)
const myCustomLevels = {
  levels: {
    error: 0,
    warn: 1,
    info: 2,
    debug: 3,
  },
  colors: {
    debug: 'blue',
    info: 'cyan',
    warn: 'yellow',
    error: 'red',
  },
}

addColors(myCustomLevels.colors)


export default (projectName) => {
  if (!projectName) {
    throw Error('logger缺少项目名称，请传入String(项目名)')
  }
  const filename = process.env.NODE_ENV === 'production' ?
    `/logs/${projectName}/${projectName}.log` : `${projectName}.log`
  const logger = createLogger({
    levels: myCustomLevels.levels,
    format: combine(
      format.colorize(),
      timestamp(),
      myFormat,
    ),
    exitOnError: false,
    transports: [
      new (transports.Console)({
        level: loggerConfig.consoleLevel,
      }),
      new RotateFile({
        level: loggerConfig.fileLevel,
        filename,
        timestamp: () => (new Date().toLocaleString()),
        maxFiles: 10,
        handleExceptions: true,
      }),
    ],
  })
  return logger
}
