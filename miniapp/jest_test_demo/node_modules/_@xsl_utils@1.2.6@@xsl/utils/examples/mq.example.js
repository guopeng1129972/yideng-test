import amqp from 'amqplib'
import config from '../src/config'
import consumeMq from '../src/mqConsumers'
// import pubMq from '../src/pubMq'

consumeMq({
  vhost: 'dform',
  channelConfigs: [
    {
      exchange: { name: 'lalala', type: 'topic' },
      queue: { name: 'bulabula', assertOptions: { exclusive: true } },
      routingKey: 'wawawawa',
      consume: {
        consumeHandler: async (msg, { channel }) => {
          console.log(msg.content.toString(), '-----msg')
          channel.ack(msg)
        },
      },
    },
  ],
})

const vhost = 'dform'
const exchange = 'lalala'
const routingKey = 'wawawawa'
const data = '4321'

async function pubMutli() {
  const { amqpDomains } = config
  const i = Math.floor(Math.random() * amqpDomains.length)
  const url = `${amqpDomains[i]}/${vhost}`
  const connection = await amqp.connect(url)
  const channel = await connection.createChannel()

  for (let j = 0; j < 1000; j++) {
    try {
      await channel.assertExchange(exchange, 'topic', { durable: true })
      await channel.publish(exchange, routingKey, Buffer.from(JSON.stringify(`${j}`)))
    } catch (e) {
      console.error(`publish 消息错误, routing key is ${routingKey}`, e)
    }
  }
  await channel.close()
  connection.close()
}

setTimeout(pubMutli, 1000)
